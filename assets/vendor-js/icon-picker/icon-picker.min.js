window.IconPicker=function(args){return{id:null,value:"",iconType:"solid",container:null,onSelect:null,icons:null,labels:{changeIconButtonLabel:"Change Icon",changeIconButtonPlaceholder:"Click to select icon",filterByNameInputLabel:"Filter By Name",filterByNameInputPlaceholder:"Search",filterByGroupInputLabel:"Filter By Icon Pack",doneButtonLabel:"Done",iconGroupLabels:{}},init:function(){let _this=this;const body=document.querySelector("body"),count=body.getAttribute("data-directorist-icon-picker-count"),id=count?parseInt(count)+1:1;body.setAttribute("data-directorist-icon-picker-count",id),this.id=id,this.container=void 0!==args.container?args.container:this.container,this.labels=void 0!==args.labels?{...this.labels,...args.labels}:this.labels,this.onSelect=void 0!==args.onSelect?args.onSelect:this.onSelect,this.icons=void 0!==args.icons?args.icons:this.icons,this.value="string"==typeof args.value?args.value:this.value,this.container&&(this.renderMarkup(),this.renderIcon(),this.attachEvents())},renderIcon(){const iconsGroup=this.container.closest("body").querySelector("#iconsWrapperElm .icons-group");if(iconsGroup)return;let markup="";for(const iconGroupKey of Object.keys(this.icons)){markup+=`<div class="icons-group ${iconGroupKey}">`,markup+=`<h4>${this.getIconGroupLabel(iconGroupKey)}</h4>`,markup+='<div class="icons-group-icons">';for(const icon of this.icons[iconGroupKey].icons){const fullIcon=this.getFullIcon(icon.key,iconGroupKey,icon.types[0]),buttonClass=this.value===fullIcon?"cptm-btn-primary":"cptm-btn-secondery";markup+=`\n                        <button class="font-icon-btn cptm-btn ${buttonClass} ${fullIcon}" data-group-key="${iconGroupKey}" data-icon-key="${icon.key}" data-icon-type="${[icon.types]}"></button>\n                    `}markup+="</div></div>"}this.container.closest("body").querySelector("#iconsWrapperElm").innerHTML=markup},renderMarkup(){let selectedIcon=this.value?this.value.split(" "):["","icon-name"],markup="";if(markup+=`\n            <div class="icon-picker-selector icon-picker-id-${this.id}" data-icon-picker-id="${this.id}">\n                <div class="icon-picker-selector__icon">\n                    <span class="directorist-selected-icon ${this.value}"></span>\n                    <input\n                    type="text"\n                    placeholder="${this.labels.changeIconButtonPlaceholder}"\n                    class="cptm-form-control"\n                    value="${this.value}" style="${this.value?"padding-left: 38px":""}"\n                    />\n                </div>\n                <button class="icon-picker-selector__btn">${this.labels.changeIconButtonLabel}</button>\n            </div>\n                `,this.container.innerHTML=markup,document.querySelector(".icon-picker"))return;let iconPickerWrap=`\n            <div class="icon-picker">\n            <div class="icon-picker__inner">\n                <a href="#" class="icon-picker__close"\n                    ><span class="fas fa-times"></span\n                ></a>\n                <div class="icon-picker__sidebar">\n                    <div class="icon-picker__filter">\n                        <label for="">${this.labels.filterByNameInputLabel}</label>\n                        <input type="text" placeholder="${this.labels.filterByNameInputPlaceholder}" />\n                    </div>\n                    <div class="icon-picker__filter">\n                        <label for="">${this.labels.filterByGroupInputLabel}</label>\n                        <select class="icon-picker__filter_select">\n                            ${this.getIconGroupOptions()}\n                        </select>\n                    </div>\n                    <div class="icon-picker__preview">\n                        <span class="icon-picker__preview-icon ${this.value}"></span>\n                        <span class="icon-picker__preview-info">\n                            <span class="icon-picker__icon-name">${selectedIcon[1]}</span>\n                        </span>\n                    </div>\n                    <button class="cptm-btn cptm-btn-primary icon-picker__done-btn">${this.labels.doneButtonLabel}</button>\n                </div>\n                <div class="icon-picker__content">\n                <div id="iconsWrapperElm" class="iconsWrapperElm">\n\n                </div>\n            </div>\n        </div>\n            `;this.container.closest("body").insertAdjacentHTML("beforeend",iconPickerWrap)},getIconGroupOptions:function(){if(!this.icons)return"";let options="";for(const iconGroup in this.icons)options+=`<option value="${iconGroup}">${this.getIconGroupLabel(iconGroup)}</option>`+"\n";return options},getIconGroupLabel(iconGroup){const labels=this.labels.iconGroupLabels&&"object"==typeof this.labels.iconGroupLabels?this.labels.iconGroupLabels:{};return void 0!==labels[iconGroup]?labels[iconGroup]:this.icons[iconGroup].label},attachEvents(){const iconButtons=document.querySelectorAll(".font-icon-btn"),self=this;let icon;function removeActiveStatus(){iconButtons.forEach(elm=>{elm.classList.contains("cptm-btn-primary")&&elm.classList.remove("cptm-btn-primary")})}function openModal(event,self){const iconPicker=document.querySelector(".icon-picker");if(iconPicker.classList.contains("icon-picker-visible"))return;const id=event.target.closest(".icon-picker-selector").getAttribute("data-icon-picker-id"),selectedIconClassList=self.value?self.value.split(" "):[];iconPicker.setAttribute("data-icon-picker-id",id),iconPicker.querySelector(".icon-picker__filter input").value="";const iconFilterSelect=iconPicker.querySelector(".icon-picker__filter_select"),iconType=selectedIconClassList.length?selectedIconClassList[0]:"",iconGroup=self.findIconGroupByIconType(iconType);iconGroup&&(iconFilterSelect.value=iconGroup),filterIconPack(iconFilterSelect);const selectedIconClasses=selectedIconClassList.length?".font-icon-btn."+selectedIconClassList.join("."):"",selectedIcon=""!==selectedIconClasses?iconPicker.querySelector(selectedIconClasses):"";document.querySelectorAll(".font-icon-btn").forEach(item=>item.classList.remove("cptm-btn-primary")),selectedIcon&&(selectedIcon.classList.remove("cptm-btn-secondery"),selectedIcon.classList.add("cptm-btn-primary"));const previewContainer=iconPicker.querySelector(".icon-picker__preview");previewContainer.querySelector(".icon-picker__preview-icon").setAttribute("class","icon-picker__preview-icon "+self.value),previewContainer.querySelector(".icon-picker__icon-name").innerHTML=selectedIconClassList.length?selectedIconClassList[1]:"",iconPicker.classList.add("icon-picker-visible")}function closeModal(){const iconPicker=document.querySelector(".icon-picker");iconPicker.classList.remove("icon-picker-visible")}iconButtons.forEach(elm=>{elm.addEventListener("click",(function(event){event.preventDefault();const iconGroupKey=event.target.getAttribute("data-group-key"),iconKey=event.target.getAttribute("data-icon-key"),iconType=event.target.getAttribute("data-icon-type").split(",");icon=self.getFullIcon(iconKey,iconGroupKey,iconType[0]),removeActiveStatus(),elm.classList.add("cptm-btn-primary");const body=self.container.closest("body");body&&(body.querySelector(".icon-picker__preview-icon").setAttribute("class",`icon-picker__preview-icon ${icon}`),body.querySelector(".icon-picker__icon-name").innerHTML=iconKey),searchIcon()}))});const selectIconButtons=document.querySelectorAll(".icon-picker-selector .icon-picker-selector__btn");if(selectIconButtons.length)for(const selectIconButton of selectIconButtons)selectIconButton.addEventListener("click",e=>{e.preventDefault(),openModal(e,self)});document.querySelector(".icon-picker__done-btn").addEventListener("click",e=>{e.preventDefault();const id=e.target.closest(".icon-picker").getAttribute("data-icon-picker-id"),selector=document.querySelector(`.icon-picker-selector.icon-picker-id-${id}`);parseInt(id)===self.id&&(self.value=icon,"function"==typeof self.onSelect&&self.onSelect(icon),selector.querySelector("input").style.paddingLeft="38px",selector.querySelector("input").value=self.value,selector.querySelector(".directorist-selected-icon").setAttribute("class",`directorist-selected-icon ${self.value}`),closeModal())}),document.querySelector(".icon-picker__close").addEventListener("click",closeModal),document.body.addEventListener("click",e=>{e.target.closest(".icon-picker__inner")||e.target.closest(".icon-picker-selector")||e.target.closest(".icons-group-icons")||closeModal()});const searchInput=document.querySelector(".icon-picker__filter input");function searchIcon(){const filter=searchInput.value.toUpperCase(),iconBtn=document.querySelectorAll(".font-icon-btn");iconBtn.forEach(elm=>{const textValue=elm.getAttribute("data-icon-key");textValue.toUpperCase().indexOf(filter)>-1?elm.style.display="":elm.style.display="none"})}searchInput.addEventListener("keyup",searchIcon);let iconFilter=document.querySelector(".icon-picker__filter select"),faPack=document.querySelector(".icons-group.fontAwesome"),laPack=document.querySelector(".icons-group.lineAwesome");function filterIconPack(sel){"fontAwesome"===sel.value?(faPack.style.display="block",laPack.style.display="none"):"lineAwesome"===sel.value&&(laPack.style.display="block",faPack.style.display="none")}iconFilter.addEventListener("change",(function(){filterIconPack(this)})),filterIconPack(iconFilter)},findIconGroupByIconType:function(type){if(!this.icons)return"";for(const iconGroup in this.icons)for(const iconType in this.icons[iconGroup].iconTypes)if(type===this.icons[iconGroup].iconTypes[iconType].key)return iconGroup;return""},getFullIcon(iconKey,iconGroupKey,iconType){let prefix="";return void 0!==this.icons[iconGroupKey].iconTypes[iconType]&&(prefix=this.icons[iconGroupKey].iconTypes[iconType].key),`${prefix} ${iconKey}`}}};